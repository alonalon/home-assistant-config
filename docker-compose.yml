version: '3.7'

networks:
  web:
    external: false
    name: web

volumes:
  portainer:

services:
  traefik:
    image: traefik:v2.1
    container_name: traefik
    restart: always
    environment:
      - EMAIL
      - DOMAIN
    networks:
      - web
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command: --configFile=/data/traefik.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/data

  home-assistant:
    image: homeassistant/home-assistant:0.108.3
    container_name: home-assistant
    restart: always
    networks:
      - web
    volumes:
      - ./home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    devices:
      - /dev/zwave
      - /dev/zigbee
    labels:
      traefik.enable: true
      traefik.http.services.home-assistant.loadbalancer.server.port: 8123
      traefik.http.routers.home-assistant.rule: Host(`home.$DOMAIN`)
      traefik.http.routers.home-assistant.tls.certResolver: le
      traefik.http.routers.home-assistant.entrypoints: web-secured

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAIN}`)
      traefik.http.routers.portainer.tls.certResolver: le
      traefik.http.routers.portainer.entrypoints: web-secured

  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    restart: unless-stopped
    networks:
      - web
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    labels:
      traefik.enable: false

  appdaemon:
    image: acockburn/appdaemon:latest
    container_name: appdaemon
    restart: always
    networks:
      - web
    ports:
      - 5050:5050
    volumes:
      - ./appdaemon:/conf/
    environment:
      TZ: Europe/Stockholm
      EXTRA_CMD: -D INFO
    labels:
      traefik.enable: false

# WHOAMI CONTAINER FOR TESTING
#   whoami:
#    image: containous/whoami
#    container_name: whoami
#    networks:
#      - web
#    labels:
#      traefik.enable: true
#      traefik.http.routers.whoami.entrypoints: web-secured
#      traefik.http.routers.whoami.rule: Host(`whoami.$DOMAIN`)
#      traefik.http.routers.whoami.tls.certresolver: le
#      traefik.http.routers.whoami.middlewares: auth@file
